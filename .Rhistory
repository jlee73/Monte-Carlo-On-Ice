#create barplot
barplot(t(SingleJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
##creating table for specific barplot on combination jumps
CombinationJump <- table(Player[,1],exclude=rm_type)
#create barplot
barplot(t(CombinationJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
##creating table for specific barplot on Spins
Spins <- table()
#create barplot
barplot(Spins,main="Spins",col="grey50",
ylab="Attempts",xlab="")
playeer
player
Player
####load csv file
#change directory if needed
Player <- read.csv(file="D:/ISU dataset/Yuzuru Hanyu.csv", header=FALSE, sep=",")
####The data is scrapped from ISU website, which needs data-cleaning
#Type,exclude some irrelavent names
Type<-unique(Player[,1])
rm_type<-c("Elements","Program components","Total","Skating Skills","Transitions","Performance/Execution",
"Composition","Interpretation","Deduction","Program total","Transition/Linking Footwork",
"Choreography/Composition","Transition/Linking Footwork/Movement","Choreography")
rm_index<-which(Type %in% rm_type)
###compute how many times each type of jumps have perform and plot a barplot
##table type
Type<-Type[-rm_index]
par(mar = c(7, 4, 2, 2) + 0.2)
Type_count<-table(Player[,1],exclude=rm_type)
##Drawing barplot
#decide end point, the frame of the plot
Player <- read.csv(file="D:/ISU dataset/Yuzuru Hanyu.csv", header=FALSE, sep=",")
Player <- read.csv(file="D:/ISU dataset/Monte-Carlo-On-Ice/Yuzuru Hanyu.csv", header=FALSE, sep=",")
####load csv file
#change directory if needed
Player <- read.csv(file="D:/ISU dataset/Monte-Carlo-On-Ice/Yuzuru Hanyu.csv", header=FALSE, sep=",")
####The data is scrapped from ISU website, which needs data-cleaning
#Type,exclude some irrelavent names
Type<-unique(Player[,1])
rm_type<-c("Elements","Program components","Total","Skating Skills","Transitions","Performance/Execution",
"Composition","Interpretation","Deduction","Program total","Transition/Linking Footwork",
"Choreography/Composition","Transition/Linking Footwork/Movement","Choreography")
rm_index<-which(Type %in% rm_type)
###compute how many times each type of jumps have perform and plot a barplot
##table type
Type<-Type[-rm_index]
par(mar = c(7, 4, 2, 2) + 0.2)
Type_count<-table(Player[,1],exclude=rm_type)
##Drawing barplot
#decide end point, the frame of the plot
end_point = 0.5 + nrow(Type_count) + nrow(Type_count)-1
#barplot-delete axisnames and put on rotated ones using text() syntax
barplot(Type_count,main="Number of Attempts",col="grey50", ylim=c(0,5+max(Type_count))
,ylab="Attempts",xlab="",space=1,axisnames = FALSE)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = paste(rownames(Type_count)), cex=0.65)
#define all single jump
four_toe<-c("4T","4T<","4T<<","4T+REP","4T<+REP")
four_shal<-c("4S","4S<","4S<<","4S+REP")
four_lutz<-c("4Lz","4Lz<","4Lz<<","4Lze","4Lz+REP")
four_loop<-c("4Lo","4Lo<","4Lo<<","4Lz+REP")
four_flip<-c("4F","4F<","4F<<","4Fe")
three_toe<-c("3T","3T<","3T<<")
three_shal<-c("3S","3S<","3S<<")
three_lutz<-c("3Lz","3Lz<","3Lz<<","3Lze")
three_loop<-c("3Lo","3Lo<","3Lo<<")
three_flip<-c("3F","3F<","3F<<","3Fe")
three_axel<-c("3A","3A<","3A<<")
QuadT <- Player[Player$V1 %in% four_toe,1:3]
QuadS <- Player[Player$V1 %in% four_shal,1:3]
QuadLz <- Player[Player$V1 %in% four_lutz,1:3]
QuadLo <- Player[Player$V1 %in% four_loop,1:3]
QuadF <- Player[Player$V1 %in% four_flip,1:3]
TripT <- Player[Player$V1 %in% three_toe,1:3]
TripS <- Player[Player$V1 %in% three_shal,1:3]
TripLz <- Player[Player$V1 %in% three_lutz,1:3]
TripLo <- Player[Player$V1 %in% three_loop,1:3]
TripF <- Player[Player$V1 %in% three_flip,1:3]
TripA <- Player[Player$V1 %in% three_axel,1:3]
##creating table for specific barplot on single jumps
SingleJump <- matrix(c(0,1,0,7,32,45,
18,34,45,33,6,2),ncol=1,byrow=TRUE)
colnames(SingleJump) <- c("Attempts")
rownames(SingleJump) <- c("QuadAxel","QuadLutz","QuadFlip","QuadLoop","QuadSalchow","QuadToe"
,"TripAxel","TripLutz","TripFlip","TripLoop","TripSalchow","TripToe")
SingleJump <- as.table(SingleJump)
#create barplot
barplot(t(SingleJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
##creating table for specific barplot on combination jumps
CombinationJump <- table(Player[,1],exclude=rm_type)
#create barplot
barplot(t(CombinationJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
##creating table for specific barplot on Spins
Spins <- table()
#create barplot
barplot(Spins,main="Spins",col="grey50",
ylab="Attempts",xlab="")
CombinationJump
View(Player)
View(Player)
#############################################################################################
#Figure Skating Analysis Using Monte Carlo Simulation
#Author: James Lee(jlee73@ncsu.edu)
#Abstract: The goal of this project is to understand FS program scoring and
#          simulate the distribution of score before and after IJS rule change.
#############################################################################################
####load csv file
#change directory if needed
Player <- read.csv(file="D:/ISU dataset/Monte-Carlo-On-Ice/Yuzuru Hanyu.csv", header=FALSE, sep=",")
####The data is scrapped from ISU website, which needs data-cleaning
#Type,exclude some irrelavent names
Type<-unique(Player[,1])
rm_type<-c("Elements","Program components","Total","Skating Skills","Transitions","Performance/Execution",
"Composition","Interpretation","Deduction","Program total","Transition/Linking Footwork",
"Choreography/Composition","Transition/Linking Footwork/Movement","Choreography")
rm_index<-which(Type %in% rm_type)
###compute how many times each type of jumps have perform and plot a barplot
##table type
Type<-Type[-rm_index]
par(mar = c(7, 4, 2, 2) + 0.2)
Type_count<-table(Player[,1],exclude=rm_type)
##Drawing barplot
#decide end point, the frame of the plot
end_point = 0.5 + nrow(Type_count) + nrow(Type_count)-1
#barplot-delete axisnames and put on rotated ones using text() syntax
barplot(Type_count,main="Number of Attempts",col="grey50", ylim=c(0,5+max(Type_count))
,ylab="Attempts",xlab="",space=1,axisnames = FALSE)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = paste(rownames(Type_count)), cex=0.65)
#define all single jump
four_toe<-c("4T","4T<","4T<<","4T+REP","4T<+REP")
four_shal<-c("4S","4S<","4S<<","4S+REP")
four_lutz<-c("4Lz","4Lz<","4Lz<<","4Lze","4Lz+REP")
four_loop<-c("4Lo","4Lo<","4Lo<<","4Lz+REP")
four_flip<-c("4F","4F<","4F<<","4Fe")
three_toe<-c("3T","3T<","3T<<")
three_shal<-c("3S","3S<","3S<<")
three_lutz<-c("3Lz","3Lz<","3Lz<<","3Lze")
three_loop<-c("3Lo","3Lo<","3Lo<<")
three_flip<-c("3F","3F<","3F<<","3Fe")
three_axel<-c("3A","3A<","3A<<")
QuadT <- Player[Player$V1 %in% four_toe,1:3]
QuadS <- Player[Player$V1 %in% four_shal,1:3]
QuadLz <- Player[Player$V1 %in% four_lutz,1:3]
QuadLo <- Player[Player$V1 %in% four_loop,1:3]
QuadF <- Player[Player$V1 %in% four_flip,1:3]
TripT <- Player[Player$V1 %in% three_toe,1:3]
TripS <- Player[Player$V1 %in% three_shal,1:3]
TripLz <- Player[Player$V1 %in% three_lutz,1:3]
TripLo <- Player[Player$V1 %in% three_loop,1:3]
TripF <- Player[Player$V1 %in% three_flip,1:3]
TripA <- Player[Player$V1 %in% three_axel,1:3]
##creating table for specific barplot on single jumps
SingleJump <- matrix(c(0,1,0,7,32,45,
18,34,45,33,6,2),ncol=1,byrow=TRUE)
colnames(SingleJump) <- c("Attempts")
rownames(SingleJump) <- c("QuadAxel","QuadLutz","QuadFlip","QuadLoop","QuadSalchow","QuadToe"
,"TripAxel","TripLutz","TripFlip","TripLoop","TripSalchow","TripToe")
SingleJump <- as.table(SingleJump)
#create barplot
barplot(t(SingleJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
# ##creating table for specific barplot on combination jumps
#
# CombinationJump <- table(Player[,1],exclude=rm_type)
#
# #create barplot
# barplot(t(CombinationJump),main="Single Jump",col="grey50",
#         ylab="Attempts",xlab="")
#
# ##creating table for specific barplot on Spins
#
# Spins <- table()
#
# #create barplot
# barplot(Spins,main="Spins",col="grey50",
#         ylab="Attempts",xlab="")
###data preprocessing for the simulation
View(Player)
jump_new<-Player[,1:3]
View(jump_new)
View(jump_new)
jump_new<-subset(jump_new, V1!=rm_type)
jump_new<-jump_new[which(V1!=rm_type)]
View(jump_new)
View(jump_new)
jump_new2<-subset(jump_new,select=-rm_type)
jump_new<-jump_new[!which(V1 %in% rm_type)]
View(jump_new)
View(jump_new)
jump_new<-jump_new[!(V1=="Elements"||"Program components"||"Total"||"Skating Skills"||"Transitions"||"Performance/Execution"||
"Composition"||"Interpretation"||"Deduction"||"Program total"||"Transition/Linking Footwork"||
"Choreography/Composition"||"Transition/Linking Footwork/Movement"||"Choreography")]
jump_new<-jump_new[!(jump_new$V1=="Elements"||"Program components"||"Total"||"Skating Skills"||"Transitions"||"Performance/Execution"||
"Composition"||"Interpretation"||"Deduction"||"Program total"||"Transition/Linking Footwork"||
"Choreography/Composition"||"Transition/Linking Footwork/Movement"||"Choreography")]
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"||jump_new$V1=="Total"||
jump_new$V1=="Skating Skills"||jump_new$V1=="Transitions"||jump_new$V1=="Performance/Execution"||
jump_new$V1=="Composition"||jump_new$V1=="Interpretation"||jump_new$V1=="Deduction"||
jump_new$V1=="Program total"||jump_new$V1=="Transition/Linking Footwork"||
jump_new$V1=="Choreography/Composition"||jump_new$V1=="Transition/Linking Footwork/Movement"||
jump_new$V1=="Choreography")]
View(jump_new)
View(jump_new)
jump_new<-Player[,1:3]
View(jump_new)
View(jump_new)
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"||jump_new$V1=="Total"||
jump_new$V1=="Skating Skills"||jump_new$V1=="Transitions"||jump_new$V1=="Performance/Execution"||
jump_new$V1=="Composition"||jump_new$V1=="Interpretation"||jump_new$V1=="Deduction"||
jump_new$V1=="Program total"||jump_new$V1=="Transition/Linking Footwork"||
jump_new$V1=="Choreography/Composition"||jump_new$V1=="Transition/Linking Footwork/Movement"||
jump_new$V1=="Choreography")]
View(jump_new)
View(jump_new)
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"||jump_new$V1=="Total"||
jump_new$V1=="Skating Skills"||jump_new$V1=="Transitions"||jump_new$V1=="Performance/Execution"||
jump_new$V1=="Composition"||jump_new$V1=="Interpretation"||jump_new$V1=="Deduction"||
jump_new$V1=="Program total"||jump_new$V1=="Transition/Linking Footwork"||
jump_new$V1=="Choreography/Composition"||jump_new$V1=="Transition/Linking Footwork/Movement"||
jump_new$V1=="Choreography")]
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"||jump_new$V1=="Total"||
jump_new$V1=="Skating Skills"||jump_new$V1=="Transitions"||jump_new$V1=="Performance/Execution"||
jump_new$V1=="Composition"||jump_new$V1=="Interpretation"||jump_new$V1=="Deduction"||
jump_new$V1=="Program total"||jump_new$V1=="Transition/Linking Footwork"||
jump_new$V1=="Choreography/Composition"||jump_new$V1=="Transition/Linking Footwork/Movement"||
jump_new$V1=="Choreography")]
View(jump_new)
View(jump_new)
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"||jump_new$V1=="Total"||
jump_new$V1=="Skating Skills"||jump_new$V1=="Transitions"||jump_new$V1=="Performance/Execution"||
jump_new$V1=="Composition"||jump_new$V1=="Interpretation"||jump_new$V1=="Deduction"||
jump_new$V1=="Program total"||jump_new$V1=="Transition/Linking Footwork"||
jump_new$V1=="Choreography/Composition"||jump_new$V1=="Transition/Linking Footwork/Movement"||
jump_new$V1=="Choreography"),]
View(jump_new)
View(jump_new)
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"),]
View(jump_new)
View(jump_new)
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"||jump_new$V1=="Program components"),]
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"&jump_new$V1=="Program components"&jump_new$V1=="Total"&
jump_new$V1=="Skating Skills"&jump_new$V1=="Transitions"&jump_new$V1=="Performance/Execution"&
jump_new$V1=="Composition"&jump_new$V1=="Interpretation"&jump_new$V1=="Deduction"&
jump_new$V1=="Program total"&jump_new$V1=="Transition/Linking Footwork"&
jump_new$V1=="Choreography/Composition"&jump_new$V1=="Transition/Linking Footwork/Movement"&
jump_new$V1=="Choreography"),]
jump_new<-jump_new[!(jump_new$V1=="Elements"|jump_new$V1=="Program components"|jump_new$V1=="Total"|
jump_new$V1=="Skating Skills"|jump_new$V1=="Transitions"|jump_new$V1=="Performance/Execution"|
jump_new$V1=="Composition"|jump_new$V1=="Interpretation"|jump_new$V1=="Deduction"|
jump_new$V1=="Program total"|jump_new$V1=="Transition/Linking Footwork"|
jump_new$V1=="Choreography/Composition"|jump_new$V1=="Transition/Linking Footwork/Movement"|
jump_new$V1=="Choreography"),]
View(jump_new)
View(jump_new)
jump_cleaned<-jump_new[order(V1),]
jump_cleaned<-jump_new[order(jump_new$V1),]
View(jump_cleaned)
View(jump_cleaned)
View(QuadLz)
View(QuadLz)
View(jump_cleaned)
View(jump_cleaned)
View(Player)
View(Player)
View(jump_cleaned)
View(jump_cleaned)
S1A_M<-Player[Player$V1 %in% c("1A"),1:3]
#############################################################################################
#Figure Skating Analysis Using Monte Carlo Simulation
#Author: James Lee(jlee73@ncsu.edu)
#Abstract: The goal of this project is to understand FS program scoring and
#          simulate the distribution of score before and after IJS rule change.
#############################################################################################
####load csv file
#change directory if needed
Player <- read.csv(file="D:/ISU dataset/Monte-Carlo-On-Ice/Yuzuru Hanyu.csv", header=FALSE, sep=",")
####The data is scrapped from ISU website, which needs data-cleaning
#Type,exclude some irrelavent names
Type<-unique(Player[,1])
rm_type<-c("Elements","Program components","Total","Skating Skills","Transitions","Performance/Execution",
"Composition","Interpretation","Deduction","Program total","Transition/Linking Footwork",
"Choreography/Composition","Transition/Linking Footwork/Movement","Choreography")
rm_index<-which(Type %in% rm_type)
###compute how many times each type of jumps have perform and plot a barplot
##table type
Type<-Type[-rm_index]
par(mar = c(7, 4, 2, 2) + 0.2)
Type_count<-table(Player[,1],exclude=rm_type)
##Drawing barplot
#decide end point, the frame of the plot
end_point = 0.5 + nrow(Type_count) + nrow(Type_count)-1
#barplot-delete axisnames and put on rotated ones using text() syntax
barplot(Type_count,main="Number of Attempts",col="grey50", ylim=c(0,5+max(Type_count))
,ylab="Attempts",xlab="",space=1,axisnames = FALSE)
text(seq(1.5,end_point,by=2), par("usr")[3]-0.25,
srt = 60, adj= 1, xpd = TRUE,
labels = paste(rownames(Type_count)), cex=0.65)
#define all jump
four_toe<-c("4T","4T<","4T<<","4T+REP","4T<+REP")
four_shal<-c("4S","4S<","4S<<","4S+REP")
four_lutz<-c("4Lz","4Lz<","4Lz<<","4Lze","4Lz+REP")
four_loop<-c("4Lo","4Lo<","4Lo<<","4Lo+REP")
four_flip<-c("4F","4F<","4F<<","4Fe")
three_toe<-c("3T","3T<","3T<<")
three_shal<-c("3S","3S<","3S<<")
three_lutz<-c("3Lz","3Lz<","3Lz<<","3Lze")
three_loop<-c("3Lo","3Lo<","3Lo<<")
three_flip<-c("3F","3F<","3F<<","3Fe")
three_axel<-c("3A","3A<","3A<<")
S1A<-c("1A")
C1A1Lo3S<-c("1A+1Lo+3S")
S1A1T<-c("1A+1T")
S1Lo<-c("1Lo")
S1Lz<-c("1Lz")
C1Lz2T<-c("1Lz+2T")
S1S<-c("1S")
S2Lz<-c("2Lz")
S2S<-c("2S")
C2S1Lo<-c("2S+1Lo")
C2S3T<-c("2S+3T")
S2T<-c("2T")
C2T1Lo2S<-c("2T+1Lo+2S")
S3A<-c("3A","3A<")
C3A1Lo2S<-c("3A+1Lo+2S","3A+1Lo<<+2S")
C3A1Lo3S<-c("3A+1Lo+3S","3A+1Lo<+3S")
C3A1T<-c("3A+1T")
C3A1T1Lo<-c("3A+1T+1Lo")
C3A2T<-c("3A+2T")
C3A2T2T<-c("3A+2T+2T")
C3A3T<-c("3A+3T","3A+3T<")
C3A3T2T<-c("3A+3T+2T")
S3F<-c("3F","3Fe")
S3Lo<-c("3Lo","3Lo<")
C3Lo1Lo3S<-c("3Lo+1Lo+3S")
C3Lo1T<-c("3Lo+1T")
C3Lo2T<-c("3Lo+2T")
S3Lz<-c("3Lz","3Lz<")
C3Lz1Lo3S<-c("3Lz+1Lo+3S","3Lz+1Lo+3S<")
C3Lz1T<-c("3Lz+1T")
C3Lz2T<-c("3Lz+2T")
C3Lz2T2T<-c("3Lz+2T+2T")
S3S<-c("3S")
C3S2T<-c("3S+2T")
S3T<-c("3T")
S4Lo<-c("4Lo","4Lo<","4Lo<<","4Lo+REP")
S4Lz<-c("4Lz","4Lz<","4Lz<<","4Lze","4Lz+REP")
S4S<-c("4S","4S<","4S<<","4S+REP")
C4S3T<-c("4S+3T")
S4T<-c("4T","4T<","4T<<","4T+REP","4T<+REP")
C4T1Lo3S<-c("4T+1Lo+3S")
C4T2T<-c("4T+2T")
C4T3T<-c("4T+3T")
CCoSp1<-c("CCoSp1")
CCoSp2<-c("CCoSp2")
CCoSp3<-c("CCoSp3")
CCoSp3p3<-c("CCoSp3p3")
CCoSp3p4<-c("CCoSp3p4")
CCoSp4<-c("CCoSp4")
ChSq<-c("ChSq")
ChSq1<-c("ChSq1")
ChSt1<-c("ChSt1")
CiSt1<-c("CiSt1")
CiSt3<-c("CiSt3")
CiSt4<-c("CiSt4")
CSSp4<-c("CSSp4")
FCCoSp2<-c("FCCoSp2")
FCCoSp2p2<-c("FCCoSp2p2")
FCCoSp3<-c("FCCoSp3")
FCCoSp3p3<-c("FCCoSp3p3")
FCCoSp3p4<-c("FCCoSp3p4")
FCCoSp4<-c("FCCoSp4")
FCSSp3<-c("FCSSp3")
FCSSp4<-c("FCSSp4")
SlSt2<-c("SlSt2")
SlSt3<-c("SlSt3")
StSq2<-c("StSq2")
StSq3<-c("StSq3")
StSq4<-c("StSq4")
QuadT <- Player[Player$V1 %in% four_toe,1:3]
QuadS <- Player[Player$V1 %in% four_shal,1:3]
QuadLz <- Player[Player$V1 %in% four_lutz,1:3]
QuadLo <- Player[Player$V1 %in% four_loop,1:3]
QuadF <- Player[Player$V1 %in% four_flip,1:3]
TripT <- Player[Player$V1 %in% three_toe,1:3]
TripS <- Player[Player$V1 %in% three_shal,1:3]
TripLz <- Player[Player$V1 %in% three_lutz,1:3]
TripLo <- Player[Player$V1 %in% three_loop,1:3]
TripF <- Player[Player$V1 %in% three_flip,1:3]
TripA <- Player[Player$V1 %in% three_axel,1:3]
S1A_M<-Player[Player$V1 %in% c("1A"),1:3]
C1A1Lo3S_M<-Player[Player$V1 %in% c("1A+1Lo+3S"),1:3]
S1A1T_M<-Player[Player$V1 %in% c("1A+1T"),1:3]
S1Lo_M<-Player[Player$V1 %in% c("1Lo"),1:3]
S1Lz_M<-Player[Player$V1 %in% c("1Lz"),1:3]
C1Lz2T_M<-Player[Player$V1 %in% c("1Lz+2T"),1:3]
S1S_M<-Player[Player$V1 %in% c("1S"),1:3]
S2Lz_M<-Player[Player$V1 %in% c("2Lz"),1:3]
S2S_M<-Player[Player$V1 %in% c("2S"),1:3]
C2S1Lo_M<-Player[Player$V1 %in% c("2S+1Lo"),1:3]
C2S3T_M<-Player[Player$V1 %in% c("2S+3T"),1:3]
S2T_M<-Player[Player$V1 %in% c("2T"),1:3]
C2T1Lo2S_M<-Player[Player$V1 %in% c("2T+1Lo+2S"),1:3]
S3A_M<-Player[Player$V1 %in% c("3A","3A<"),1:3]
C3A1Lo2S_M<-Player[Player$V1 %in% c("3A+1Lo+2S","3A+1Lo<<+2S"),1:3]
C3A1Lo3S_M<-Player[Player$V1 %in% c("3A+1Lo+3S","3A+1Lo<+3S"),1:3]
C3A1T_M<-Player[Player$V1 %in% c("3A+1T"),1:3]
C3A1T1Lo_M<-Player[Player$V1 %in% c("3A+1T+1Lo"),1:3]
C3A2T_M<-Player[Player$V1 %in% c("3A+2T"),1:3]
C3A2T2T_M<-Player[Player$V1 %in% c("3A+2T+2T"),1:3]
C3A3T_M<-Player[Player$V1 %in% c("3A+3T","3A+3T<"),1:3]
C3A3T2T_M<-Player[Player$V1 %in% c("3A+3T+2T"),1:3]
S3F_M<-Player[Player$V1 %in% c("3F","3Fe"),1:3]
S3Lo_M<-Player[Player$V1 %in% c("3Lo","3Lo<"),1:3]
C3Lo1Lo3S_M<-Player[Player$V1 %in% c("3Lo+1Lo+3S"),1:3]
C3Lo1T_M<-Player[Player$V1 %in% c("3Lo+1T"),1:3]
C3Lo2T_M<-Player[Player$V1 %in% c("3Lo+2T"),1:3]
S3Lz_M<-Player[Player$V1 %in% c("3Lz","3Lz<"),1:3]
C3Lz1Lo3S_M<-Player[Player$V1 %in% c("3Lz+1Lo+3S","3Lz+1Lo+3S<"),1:3]
C3Lz1T_M<-Player[Player$V1 %in% c("3Lz+1T"),1:3]
C3Lz2T_M<-Player[Player$V1 %in% c("3Lz+2T"),1:3]
C3Lz2T2T_M<-Player[Player$V1 %in% c("3Lz+2T+2T"),1:3]
S3S_M<-Player[Player$V1 %in% c("3S"),1:3]
C3S2T_M<-Player[Player$V1 %in% c("3S+2T"),1:3]
S3T_M<-Player[Player$V1 %in% c("3T"),1:3]
S4Lo_M<-Player[Player$V1 %in% c("4Lo","4Lo<","4Lo<<","4Lo+REP"),1:3]
S4Lz_M<-Player[Player$V1 %in% c("4Lz","4Lz<","4Lz<<","4Lze","4Lz+REP"),1:3]
S4S_M<-Player[Player$V1 %in% c("4S","4S<","4S<<","4S+REP"),1:3]
C4S3T_M<-Player[Player$V1 %in% c("4S+3T"),1:3]
S4T_M<-Player[Player$V1 %in% c("4T","4T<","4T<<","4T+REP","4T<+REP"),1:3]
C4T1Lo3S_M<-Player[Player$V1 %in% c("4T+1Lo+3S"),1:3]
C4T2T_M<-Player[Player$V1 %in% c("4T+2T"),1:3]
C4T3T_M<-Player[Player$V1 %in% c("4T+3T"),1:3]
CCoSp1_M<-Player[Player$V1 %in% c("CCoSp1"),1:3]
CCoSp2_M<-Player[Player$V1 %in% c("CCoSp2"),1:3]
CCoSp3_M<-Player[Player$V1 %in% c("CCoSp3"),1:3]
CCoSp3p3_M<-Player[Player$V1 %in% c("CCoSp3p3"),1:3]
CCoSp3p4_M<-Player[Player$V1 %in% c("CCoSp3p4"),1:3]
CCoSp4_M<-Player[Player$V1 %in% c("CCoSp4"),1:3]
ChSq_M<-Player[Player$V1 %in% c("ChSq"),1:3]
ChSq1_M<-Player[Player$V1 %in% c("ChSq1"),1:3]
ChSt1_M<-Player[Player$V1 %in% c("ChSt1"),1:3]
CiSt1_M<-Player[Player$V1 %in% c("CiSt1"),1:3]
CiSt3_M<-Player[Player$V1 %in% c("CiSt3"),1:3]
CiSt4_M<-Player[Player$V1 %in% c("CiSt4"),1:3]
CSSp4_M<-Player[Player$V1 %in% c("CSSp4"),1:3]
FCCoSp2_M<-Player[Player$V1 %in% c("FCCoSp2"),1:3]
FCCoSp2p2_M<-Player[Player$V1 %in% c("FCCoSp2p2"),1:3]
FCCoSp3_M<-Player[Player$V1 %in% c("FCCoSp3"),1:3]
FCCoSp3p3_M<-Player[Player$V1 %in% c("FCCoSp3p3"),1:3]
FCCoSp3p4_M<-Player[Player$V1 %in% c("FCCoSp3p4"),1:3]
FCCoSp4_M<-Player[Player$V1 %in% c("FCCoSp4"),1:3]
FCSSp3_M<-Player[Player$V1 %in% c("FCSSp3"),1:3]
FCSSp4_M<-Player[Player$V1 %in% c("FCSSp4"),1:3]
SlSt2_M<-Player[Player$V1 %in% c("SlSt2"),1:3]
SlSt3_M<-Player[Player$V1 %in% c("SlSt3"),1:3]
StSq2_M<-Player[Player$V1 %in% c("StSq2"),1:3]
StSq3_M<-Player[Player$V1 %in% c("StSq3"),1:3]
StSq4_M<-Player[Player$V1 %in% c("StSq4"),1:3]
##creating table for specific barplot on single jumps
SingleJump <- matrix(c(0,1,0,7,32,45,
18,34,45,33,6,2),ncol=1,byrow=TRUE)
colnames(SingleJump) <- c("Attempts")
rownames(SingleJump) <- c("QuadAxel","QuadLutz","QuadFlip","QuadLoop","QuadSalchow","QuadToe"
,"TripAxel","TripLutz","TripFlip","TripLoop","TripSalchow","TripToe")
SingleJump <- as.table(SingleJump)
#create barplot
barplot(t(SingleJump),main="Single Jump",col="grey50",
ylab="Attempts",xlab="")
# ##creating table for specific barplot on combination jumps
#
# CombinationJump <- table(Player[,1],exclude=rm_type)
#
# #create barplot
# barplot(t(CombinationJump),main="Single Jump",col="grey50",
#         ylab="Attempts",xlab="")
#
# ##creating table for specific barplot on Spins
#
# Spins <- table()
#
# #create barplot
# barplot(Spins,main="Spins",col="grey50",
#         ylab="Attempts",xlab="")
###data preprocessing for the simulation
jump_new<-Player[,1:3]
jump_new<-jump_new[!(jump_new$V1=="Elements"|jump_new$V1=="Program components"|jump_new$V1=="Total"|
jump_new$V1=="Skating Skills"|jump_new$V1=="Transitions"|jump_new$V1=="Performance/Execution"|
jump_new$V1=="Composition"|jump_new$V1=="Interpretation"|jump_new$V1=="Deduction"|
jump_new$V1=="Program total"|jump_new$V1=="Transition/Linking Footwork"|
jump_new$V1=="Choreography/Composition"|jump_new$V1=="Transition/Linking Footwork/Movement"|
jump_new$V1=="Choreography"),]
jump_cleaned<-jump_new[order(jump_new$V1),]
View(C3A3T_M)
View(C3A3T_M)
barplot(jump_cleaned$V3,main="GOE",col="grey50",
ylab="",xlab="")
jump_cleaned$V3
barplot(as.vector(jump_cleaned$V3),main="GOE",col="grey50",
ylab="",xlab="")
